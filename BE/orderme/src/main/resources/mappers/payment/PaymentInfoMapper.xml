<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.orderme.payment.mapper.PaymentInfoMapper">

    <!-- ID로 결제 정보 조회 -->
    <select id="findById" resultType="com.ssafy.orderme.payment.model.PaymentInfo">
        SELECT
            payment_info_id as paymentInfoId,
            user_id as userId,
            card_number as cardNumber,
            card_expiry as cardExpiry,
            is_default as isDefault
        FROM payment_info
        WHERE payment_info_id = #{paymentInfoId}
    </select>

    <!-- 사용자 ID로 기본 결제 정보 조회 -->
    <select id="findDefaultByUserId" resultType="com.ssafy.orderme.payment.model.PaymentInfo">
        SELECT
            payment_info_id as paymentInfoId,
            user_id as userId,
            card_number as cardNumber,
            card_expiry as cardExpiry,
            is_default as isDefault
        FROM payment_info
        WHERE user_id = #{userId}
          AND is_default = true
            LIMIT 1
    </select>

    <!-- 카드 등록 -->
    <insert id="registerCard" parameterType="com.ssafy.orderme.payment.model.PaymentInfo" useGeneratedKeys="true" keyProperty="paymentInfoId">
        INSERT INTO payment_info (
            user_id,
            card_number,
            card_expiry,
            is_default
        ) VALUES (
                     #{userId},
                     #{cardNumber},
                     #{cardExpiry},
                     #{isDefault}
                 )
    </insert>

    <!-- 기존 기본 카드 설정 해제 -->
    <update id="unsetDefaultCards">
        UPDATE payment_info
        SET is_default = false
        WHERE user_id = #{userId}
    </update>

    <!-- 기본 카드로 설정 -->
    <update id="setDefaultCard">
        UPDATE payment_info
        SET is_default = true
        WHERE payment_info_id = #{paymentInfoId}
          AND user_id = #{userId}
    </update>

    <!-- 카드 목록 조회 -->
    <select id="getCardList" resultType="com.ssafy.orderme.payment.model.PaymentInfo">
        SELECT
            payment_info_id as paymentInfoId,
            user_id as userId,
            card_number as cardNumber,
            card_expiry as cardExpiry,
            is_default as isDefault
        FROM payment_info
        WHERE user_id = #{userId}
        ORDER BY is_default DESC, payment_info_id DESC
    </select>

    <!-- 카드 삭제 (소프트 딜리트) -->
    <update id="deleteCard">
        DELETE FROM payment_info
        WHERE payment_info_id = #{paymentInfoId}
          AND user_id = #{userId}
    </update>

    <!-- 카드 존재 여부 확인 -->
    <select id="existsCard" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM payment_info
        WHERE payment_info_id = #{paymentInfoId}
          AND user_id = #{userId}
    </select>

</mapper>