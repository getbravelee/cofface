<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.orderme.kiosk.mapper.MenuMapper">
    <!-- 메뉴 조회 결과를 Menu 객체에 매핑 -->
    <resultMap id="MenuResultMap" type="com.ssafy.orderme.kiosk.model.Menu">
        <id property="menuId" column="menu_id" />
        <result property="storeId" column="store_id" />
        <result property="menuName" column="menu_name" />
        <result property="price" column="price" />
        <result property="category" column="category" />
        <result property="isSoldOut" column="is_sold_out" />
        <result property="imageUrl" column="image_url" />
        <result property="isDeleted" column="is_deleted" />
        <result property="deletedAt" column="deleted_at" />
    </resultMap>

    <!-- 메뉴 옵션 조회 결과를 MenuOption 객체에 매핑 -->
    <resultMap id="MenuOptionResultMap" type="com.ssafy.orderme.kiosk.model.MenuOption">
        <id property="optionId" column="option_id" />
        <result property="menuId" column="menu_id" />
        <result property="optionName" column="option_name" />
        <result property="additionalPrice" column="additional_price" />
        <result property="isDefault" column="is_default" />
        <result property="maxSelections" column="max_selections" />
        <result property="isSoldOut" column="is_sold_out" />
        <result property="isDeleted" column="is_deleted" />
        <result property="deletedAt" column="deleted_at" />
    </resultMap>

    <!-- 매장의 모든 메뉴 조회 -->
    <select id="findAllByStoreId" parameterType="Long" resultMap="MenuResultMap">
        SELECT
            menu_id, store_id, menu_name, price, category,
            is_sold_out, image_url, is_deleted, deleted_at
        FROM Menus
        WHERE store_id = #{storeId}
          AND is_deleted = FALSE
        ORDER BY category, menu_name
    </select>

    <!-- 카테고리별 메뉴 조회 -->
    <select id="findByCategory" resultMap="MenuResultMap">
        SELECT
            menu_id, store_id, menu_name, price, category,
            is_sold_out, image_url, is_deleted, deleted_at
        FROM Menus
        WHERE store_id = #{storeId}
          AND category = #{category}
          AND is_deleted = FALSE
        ORDER BY menu_name
    </select>

    <!-- 메뉴 ID로 메뉴 상세 정보 조회 -->
    <select id="findById" parameterType="Long" resultMap="MenuResultMap">
        SELECT
            menu_id, store_id, menu_name, price, category,
            is_sold_out, image_url, is_deleted, deleted_at
        FROM Menus
        WHERE menu_id = #{menuId}
          AND is_deleted = FALSE
    </select>

    <!-- 메뉴 ID로 메뉴 옵션 목록 조회 -->
    <select id="findOptionsByMenuId" parameterType="Long" resultMap="MenuOptionResultMap">
        SELECT
            option_id, menu_id, option_name, additional_price,
            is_default, max_selections, is_sold_out,
            is_deleted, deleted_at
        FROM MenuOptions
        WHERE menu_id = #{menuId}
          AND is_deleted = FALSE
        ORDER BY
            CASE WHEN is_default = TRUE THEN 0 ELSE 1 END,
            option_name
    </select>

    <!-- 매장에서 가장 많이 팔린 메뉴 목록 조회 -->
    <select id="findPopularMenus" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category,
            m.is_sold_out, m.image_url, m.is_deleted, m.deleted_at
        FROM Menus m
                 JOIN (
            SELECT om.menu_name, COUNT(*) as order_count
            FROM OrderMenu om
                     JOIN Orders o ON om.order_id = o.order_id
            WHERE o.store_id = #{storeId}
              AND o.is_deleted = FALSE
              AND om.is_deleted = FALSE
            GROUP BY om.menu_name
            ORDER BY order_count DESC
                LIMIT #{limit}
        ) popular ON m.menu_name = popular.menu_name
        WHERE m.store_id = #{storeId}
          AND m.is_deleted = FALSE
    </select>

    <!-- 사용자가 가장 많이 주문한 메뉴 목록 조회 -->
    <select id="findFrequentOrderedMenus" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category,
            m.is_sold_out, m.image_url, m.is_deleted, m.deleted_at
        FROM Menus m
                 JOIN (
            SELECT om.menu_name, COUNT(*) as order_count
            FROM OrderMenu om
                     JOIN Orders o ON om.order_id = o.order_id
            WHERE o.store_id = #{storeId}
              AND o.internal_id = #{userId}
              AND o.is_deleted = FALSE
              AND om.is_deleted = FALSE
            GROUP BY om.menu_name
            ORDER BY order_count DESC
                LIMIT #{limit}
        ) frequent ON m.menu_name = frequent.menu_name
        WHERE m.store_id = #{storeId}
          AND m.is_deleted = FALSE
    </select>
</mapper>