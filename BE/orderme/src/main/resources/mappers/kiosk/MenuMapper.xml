<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.orderme.kiosk.mapper.MenuMapper">
    <!-- 메뉴 조회 결과를 Menu 객체에 매핑 -->
    <resultMap id="MenuResultMap" type="com.ssafy.orderme.kiosk.model.Menu">
        <id property="menuId" column="menu_id" />
        <result property="storeId" column="store_id" />
        <result property="menuName" column="menu_name" />
        <result property="price" column="price" />
        <result property="categoryId" column="category_id" />
        <result property="isSoldOut" column="is_sold_out" />
        <result property="imageUrl" column="image_url" />
        <result property="description" column="description" />
        <result property="isDeleted" column="is_deleted" />
        <result property="deletedAt" column="deleted_at" />
        <association property="category" javaType="com.ssafy.orderme.kiosk.model.Category">
            <result property="categoryName" column="category_name" />
        </association>
    </resultMap>

    <!-- 옵션 카테고리 조회 결과를 OptionCategory 객체에 매핑 -->
    <resultMap id="OptionCategoryResultMap" type="com.ssafy.orderme.kiosk.model.OptionCategory">
        <id property="categoryId" column="category_id" />
        <result property="categoryName" column="category_name" />
        <result property="isRequired" column="is_required" />
        <result property="displayOrder" column="display_order" />
        <result property="isSoldOut" column="is_sold_out" />
        <result property="isDeleted" column="is_deleted" />
        <result property="deletedAt" column="deleted_at" />
    </resultMap>

    <!-- 옵션 아이템 조회 결과를 OptionItem 객체에 매핑 -->
    <resultMap id="OptionItemResultMap" type="com.ssafy.orderme.kiosk.model.OptionItem">
        <id property="itemId" column="item_id" />
        <result property="categoryId" column="category_id" />
        <result property="optionName" column="option_name" />
        <result property="additionalPrice" column="additional_price" />
        <result property="isDefault" column="is_default" />
        <result property="displayOrder" column="display_order" />
        <result property="isDeleted" column="is_deleted" />
        <result property="deletedAt" column="deleted_at" />
    </resultMap>

    <!-- 메뉴-옵션 카테고리 연결 조회 결과를 MenuOptionCategory 객체에 매핑 -->
    <resultMap id="MenuOptionCategoryResultMap" type="com.ssafy.orderme.kiosk.model.MenuOptionCategory">
        <id property="id" column="id" />
        <result property="menuId" column="menu_id" />
        <result property="categoryId" column="category_id" />
    </resultMap>

    <!-- 매장의 모든 메뉴 조회 (변경 없음) -->
    <select id="findAllByStoreId" parameterType="Long" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at
        FROM Menus m
                 JOIN Categories c ON m.category_id = c.category_id
        WHERE m.store_id = #{storeId}
          AND m.is_deleted = FALSE
        ORDER BY c.display_order, m.menu_name
    </select>

    <!-- 카테고리별 메뉴 조회 (변경 없음) -->
    <select id="findByCategoryId" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at
        FROM Menus m
                 JOIN Categories c ON m.category_id = c.category_id
        WHERE m.store_id = #{storeId}
          AND m.category_id = #{categoryId}
          AND m.is_deleted = FALSE
        ORDER BY m.menu_name
    </select>

    <!-- 메뉴 ID로 메뉴 상세 정보 조회 (변경 없음) -->
    <select id="findById" parameterType="Long" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at
        FROM Menus m
                 LEFT JOIN Categories c ON m.category_id = c.category_id
        WHERE m.menu_id = #{menuId}
          AND m.is_deleted = FALSE
    </select>

    <!-- 메뉴 ID로 옵션 카테고리 목록 조회 (새로 추가) -->
    <select id="findOptionCategoriesByMenuId" parameterType="Long" resultMap="OptionCategoryResultMap">
        SELECT
            oc.category_id, oc.category_name, oc.is_required, oc.display_order,
            oc.is_sold_out, oc.is_deleted, oc.deleted_at
        FROM OptionCategories oc
                 JOIN MenuOptionCategories moc ON oc.category_id = moc.category_id
        WHERE moc.menu_id = #{menuId}
          AND oc.is_deleted = FALSE
        ORDER BY oc.display_order, oc.category_name
    </select>

    <!-- 옵션 카테고리 ID로 옵션 아이템 목록 조회 (새로 추가) -->
    <select id="findOptionItemsByCategoryId" parameterType="Long" resultMap="OptionItemResultMap">
        SELECT
            item_id, category_id, option_name, additional_price,
            is_default, display_order, is_deleted, deleted_at
        FROM OptionItems
        WHERE category_id = #{categoryId}
          AND is_deleted = FALSE
        ORDER BY display_order, option_name
    </select>


    <!-- 매장에서 가장 많이 팔린 메뉴 목록 조회 (변경 없음) -->
    <select id="findPopularMenus" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at,
            COUNT(om.order_menu_id) AS order_count
        FROM Menus m
                 JOIN OrderMenu om ON m.menu_name = om.menu_name
                 JOIN Orders o ON om.order_id = o.order_id
                 LEFT JOIN Categories c ON m.category_id = c.category_id
        WHERE o.store_id = #{storeId}
          AND m.is_deleted = false
          AND o.is_deleted = false
        GROUP BY m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
                 c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at
        ORDER BY order_count DESC
            LIMIT #{limit}
    </select>

    <!-- 사용자가 가장 많이 주문한 메뉴 목록 조회 (변경 없음) -->
    <select id="findFrequentOrderedMenus" resultMap="MenuResultMap">
        SELECT
            m.menu_id, m.store_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at,
            COUNT(DISTINCT om.order_id) AS order_count
        FROM OrderMenu om
                 JOIN Orders o ON om.order_id = o.order_id
                 JOIN Users u ON o.internal_id = u.internal_id
                 JOIN Menus m ON om.menu_name = m.menu_name AND m.store_id = o.store_id
                 LEFT JOIN Categories c ON m.category_id = c.category_id
        WHERE o.store_id = #{storeId}
          AND u.user_id = #{userId}
          AND m.is_deleted = false
          AND o.is_deleted = false
        GROUP BY m.menu_id
        ORDER BY order_count DESC
            LIMIT #{limit}
    </select>
</mapper>