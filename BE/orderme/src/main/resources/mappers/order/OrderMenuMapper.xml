<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.orderme.order.mapper.OrderMenuMapper">
    <!-- 주문 ID로 주문 메뉴 목록 조회 -->
    <select id="findByOrderId" resultType="com.ssafy.orderme.order.model.OrderMenu">
        SELECT
            order_menu_id as orderMenuId,
            order_id as orderId,
            menu_id as menuId,
            menu_name as menuName,
            menu_price as menuPrice,
            quantity,
            total_price as totalPrice,
            is_deleted as isDeleted,
            deleted_at as deletedAt
        FROM ordermenu
        WHERE order_id = #{orderId}
          AND is_deleted = 0
        ORDER BY order_menu_id
    </select>

    <!-- 주문 메뉴 추가 -->
    <insert id="insertOrderMenu" parameterType="com.ssafy.orderme.order.model.OrderMenu"
            useGeneratedKeys="true" keyProperty="orderMenuId">
        INSERT INTO ordermenu (
            order_id,
            menu_id,
            menu_name,
            menu_price,
            quantity,
            total_price,
            is_deleted
        ) VALUES (
                     #{orderId},
                     #{menuId},
                     #{menuName},
                     #{menuPrice},
                     #{quantity},
                     #{totalPrice},
                     #{isDeleted}
                 )
    </insert>

    <!-- 사용자별, 매장별 자주 주문하는 메뉴 TOP N 조회 -->
    <select id="findTopMenusByUserIdAndStoreId" resultType="com.ssafy.orderme.order.model.MenuFrequency">
        SELECT
            om.menu_id as menuId,
            om.menu_name as menuName,
            SUM(om.quantity) as totalCount,
            COUNT(DISTINCT om.order_id) as totalOrders
        FROM ordermenu om
                 JOIN orders o ON om.order_id = o.order_id
        WHERE o.user_id = #{userId}
          AND o.kiosk_id = #{storeId}
          AND o.is_delete = 0
          AND om.is_deleted = 0
        GROUP BY om.menu_id, om.menu_name
        ORDER BY totalCount DESC, totalOrders DESC
            LIMIT #{limit}
    </select>
</mapper>