<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.orderme.recommendation.mapper.WeatherMapper">

    <!-- 날씨별 인기 메뉴 조회 -->
    <select id="findMenusByWeather" resultMap="com.ssafy.orderme.kiosk.mapper.MenuMapper.MenuResultMap">
        SELECT
            m.menu_id, m.menu_name, m.price, m.category_id,
            c.category_name, m.is_sold_out, m.image_url, m.description, m.is_deleted, m.deleted_at
        FROM menus m
                 JOIN WeatherPreference wp ON m.menu_id = wp.menu_id
                 LEFT JOIN Categories c ON m.category_id = c.category_id
        WHERE wp.store_id = #{storeId}
          AND wp.weather_condition = #{weatherCondition}
          AND m.is_deleted = false
          AND m.is_sold_out = false
        ORDER BY wp.order_count DESC
            LIMIT #{limit}
    </select>

    <!-- 날씨별 메뉴 선호도 업데이트 -->
    <update id="updateWeatherPreference">
        INSERT INTO weatherpreference (store_id, weather_condition, menu_id, order_count, last_updated)
        VALUES (#{storeId}, #{weatherCondition}, #{menuId}, 1, NOW())
            ON DUPLICATE KEY UPDATE
                                 order_count = order_count + 1,
                                 last_updated = NOW()
    </update>

    <!-- 날씨별 메뉴 선호도 조회 -->
    <select id="findWeatherPreferences" resultType="com.ssafy.orderme.recommendation.model.WeatherPreference">
        SELECT
            stats_id as statsId,
            store_id as storeId,
            weather_condition as weatherCondition,
            menu_id as menuId,
            order_count as orderCount,
            last_updated as lastUpdated
        FROM weatherpreference
        WHERE store_id = #{storeId}
          AND weather_condition = #{weatherCondition}
        ORDER BY order_count DESC
    </select>

</mapper>